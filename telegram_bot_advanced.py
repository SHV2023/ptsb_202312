#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
"""

import logging
import os
import random
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
try:
    from config import *
except ImportError:
    # –ï—Å–ª–∏ config.py –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    BOT_TOKEN = os.getenv('BOT_TOKEN', 'YOUR_BOT_TOKEN_HERE')
    LOG_LEVEL = "INFO"
    ADMIN_IDS = []
    GREETING_RESPONSES = [
        "–ü—Ä–∏–≤–µ—Ç! üëã",
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! üòä", 
        "–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç! üéâ",
        "–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç! üëã",
    ]
    MESSAGES = {
        "start": """üëã –ü—Ä–∏–≤–µ—Ç, {name}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç.

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
/test - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞

–¢–∞–∫–∂–µ —è –æ—Ç–≤–µ—á–∞—é –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ª–æ–≤–æ–º '–ü—Ä–∏–≤–µ—Ç'! üòä""",
        
        "help": """ü§ñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/test - —Ç–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
‚Ä¢ –û—Ç–≤–µ—á–∞—é –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ª–æ–≤–æ–º '–ü—Ä–∏–≤–µ—Ç'
‚Ä¢ –í–µ–¥—É –ª–æ–≥ –≤—Å–µ—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π
‚Ä¢ –†–∞–±–æ—Ç–∞—é 24/7 (–ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ)

–ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã - –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ!""",
        
        "test": """‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {name}
üÜî ID: {user_id}
üìù Username: @{username}

ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!""",
        
        "default": """–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, {name}! üìù

–Ø –ø–æ–∫–∞ —É–º–µ—é –Ω–µ–º–Ω–æ–≥–æ, –Ω–æ –≤–æ—Ç —á—Ç–æ –º–æ–≥—É:
‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—ã /start, /help, /test
‚Ä¢ –ó–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è, –∫–æ–≥–¥–∞ –≤—ã –ø–∏—à–µ—Ç–µ '–ü—Ä–∏–≤–µ—Ç'

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å '–ü—Ä–∏–≤–µ—Ç' –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã! üòä""",
        
        "error": "üòî –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
    }

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=getattr(logging, LOG_LEVEL, logging.INFO)
)
logger = logging.getLogger(__name__)


def is_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    return user_id in ADMIN_IDS


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    message = MESSAGES["start"].format(name=user.first_name)
    
    await update.message.reply_text(message)
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.first_name} ({user.id}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    await update.message.reply_text(MESSAGES["help"])


async def test_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
    user = update.effective_user
    message = MESSAGES["test"].format(
        name=user.first_name,
        user_id=user.id,
        username=user.username if user.username else '–Ω–µ —É–∫–∞–∑–∞–Ω'
    )
    
    await update.message.reply_text(message)
    logger.info(f"–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.first_name} ({user.id})")


async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)"""
    user = update.effective_user
    
    if not is_admin(user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats_message = """üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞

ü§ñ –°—Ç–∞—Ç—É—Å: –†–∞–±–æ—Ç–∞–µ—Ç
‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: –ê–∫—Ç–∏–≤–µ–Ω
üë• –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {admin_count}

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ–±–∞–≤—å—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.""".format(
        admin_count=len(ADMIN_IDS)
    )
    
    await update.message.reply_text(stats_message)


async def handle_hello_messages(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–æ —Å–ª–æ–≤–æ–º '–ü—Ä–∏–≤–µ—Ç'"""
    user = update.effective_user
    response = random.choice(GREETING_RESPONSES)
    
    # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    if "{name}" in response:
        response = response.format(name=user.first_name)
    else:
        response = f"{response} {user.first_name}!"
    
    await update.message.reply_text(response)
    logger.info(f"–û—Ç–≤–µ—Ç–∏–ª –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç {user.first_name} ({user.id})")


async def handle_other_messages(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user = update.effective_user
    message_text = update.message.text
    
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç '–ø—Ä–∏–≤–µ—Ç', –æ—Ç–≤–µ—á–∞–µ–º –æ–±—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    if '–ø—Ä–∏–≤–µ—Ç' not in message_text.lower():
        response = MESSAGES["default"].format(name=user.first_name)
        await update.message.reply_text(response)
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user.first_name} ({user.id}): {message_text}")


async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {context.error}")
    
    if isinstance(update, Update) and update.effective_message:
        await update.effective_message.reply_text(MESSAGES["error"])


def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    if BOT_TOKEN == 'YOUR_BOT_TOKEN_HERE':
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!")
        print("–°–ø–æ—Å–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–æ–∫–µ–Ω–∞:")
        print("1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª config.py –Ω–∞ –æ—Å–Ω–æ–≤–µ config_example.py")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è: export BOT_TOKEN='–≤–∞—à_—Ç–æ–∫–µ–Ω'")
        print("3. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –≤ Telegram")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("test", test_command))
    
    # –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
    if ADMIN_IDS:
        application.add_handler(CommandHandler("stats", stats_command))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    # –°–Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π (–±–æ–ª–µ–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π)
    application.add_handler(MessageHandler(
        filters.TEXT & filters.Regex(r'(?i).*–ø—Ä–∏–≤–µ—Ç.*'), 
        handle_hello_messages
    ))
    
    # –ó–∞—Ç–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND, 
        handle_other_messages
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞...")
    print(f"üìä –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {LOG_LEVEL}")
    print(f"üë• –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {len(ADMIN_IDS)}")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    
    try:
        application.run_polling(allowed_updates=Update.ALL_TYPES)
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == '__main__':
    main()